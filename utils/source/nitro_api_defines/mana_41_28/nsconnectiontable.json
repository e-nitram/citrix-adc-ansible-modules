[
    {
        "option_name": "filterexpression",
        "type": "str",
        "description": [
            "The maximum length of filter expression is 255 and it can be of following format:",
            "<expression> [<relop> <expression>]",
            "<relop> = ( && | || )",
            "<expression> =:",
            "CONNECTION.<qualifier>.<qualifier-method>.(<qualifier-value>)",
            "<qualifier> = SRCIP",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = A valid IPv4 address",
            "example = CONNECTION.SRCIP.EQ(127.0.0.1)",
            "<qualifier> = DSTIP",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = A valid IPv4 address.",
            "example = CONNECTION.DSTIP.EQ(127.0.0.1)",
            "<qualifier> = IP",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = A valid IPv4 address.",
            "example = CONNECTION.IP.EQ(127.0.0.1)",
            "<qualifier> = SRCIPv6",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = A valid IPv6 address.",
            "example = CONNECTION.SRCIPv6.EQ(2001:db8:0:0:1::1)",
            "<qualifier> = DSTIPv6",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = A valid IPv6 address.",
            "example = CONNECTION.DSTIPv6.EQ(2001:db8:0:0:1::1)",
            "<qualifier> = IPv6",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = A valid IPv6 address.",
            "example = CONNECTION.IPv6.EQ(2001:db8:0:0:1::1)",
            "<qualifier> = SRCPORT",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A valid port number.",
            "example = CONNECTION.SRCPORT.EQ(80)",
            "<qualifier> = DSTPORT",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A valid port number.",
            "example = CONNECTION.DSTPORT.EQ(80)",
            "<qualifier> = PORT",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A valid port number.",
            "example = CONNECTION.PORT.EQ(80)",
            "<qualifier> = SVCNAME",
            "<qualifier-method> = [ EQ | NE | CONTAINS | STARTSWITH",
            "| ENDSWITH ]",
            "<qualifier-value>  = service name.",
            "example = CONNECTION.SVCNAME.EQ(\"name\")",
            "<qualifier> = LB_VSERVER.NAME",
            "<qualifier-method> = [ EQ | NE | CONTAINS | STARTSWITH",
            "| ENDSWITH ]",
            "<qualifier-value>  = LB vserver name.",
            "example = CONNECTION.LB_VSERVER.NAME.EQ(\"name\")",
            "<qualifier> = CS_VSERVER.NAME",
            "<qualifier-method> = [ EQ | NE | CONTAINS | STARTSWITH",
            "| ENDSWITH ]",
            "<qualifier-value>  = CS vserver name.",
            "example = CONNECTION.CS_VSERVER.NAME.EQ(\"name\")",
            "<qualifier> = INTF",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = A valid interface id in the form of",
            "x/y (n/x/y in case of cluster interface).",
            "examle = CONNECTION.INTF.EQ(\"0/1/1\")",
            "<qualifier> = VLANID",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A valid VLAN ID.",
            "example = CONNECTION.VLANID.EQ(0)",
            "<qualifier> = CONNID",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A valid PCB dev number.",
            "example = CONNECTION.CONNID.EQ(0)",
            "<qualifier> = PPEID",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A valid core ID.",
            "example = CONNECTION.PPEID.EQ(0)",
            "<qualifier> = IDLETIME",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A positive integer indicating the",
            "idletime.",
            "example = CONNECTION.IDLETIME.LT(100)",
            "<qualifier> = TCPSTATE",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = ( CLOSE_WAIT | CLOSED | CLOSING |",
            "ESTABLISHED | FIN_WAIT_1 | FIN_WAIT_2 | LAST_ACK |",
            "LISTEN | SYN_RECEIVED | SYN_SENT | TIME_WAIT |",
            "NOT_APPLICABLE)",
            "example = CONNECTION.TCPSTATE.EQ(LISTEN)",
            "<qualifier> = SERVICE_TYPE",
            "<qualifier-method> = [ EQ | NE ]",
            "<qualifier-value>  = ( SVC_HTTP | FTP | TCP | UDP | SSL |",
            "SSL_BRIDGE | SSL_TCP | NNTP | RPCSVR | RPCSVRS |",
            "RPCCLNT | SVC_DNS | ADNS | SNMP | RTSP | DHCPRA | NAT | ANY |",
            "MONITOR | MONITOR_UDP | MONITOR_PING | SIP_UDP |",
            "SVC_MYSQL | SVC_MSSQL | SERVICE_UNKNOWN )",
            "example = CONNECTION.SERVICE_TYPE.EQ(ANY)",
            "<qualifier> = TRAFFIC_DOMAIN_ID",
            "<qualifier-method> = [ EQ | NE | GT | GE | LT | LE",
            "| BETWEEN ]",
            "<qualifier-value>  = A valid traffic domain ID.",
            "example = CONNECTION.TRAFFIC_DOMAIN_ID.EQ(0)",
            "common usecases:",
            "Filtering out loopback connections and view present",
            "connections through netsclaer",
            "show connectiontable \"CONNECTION.IP.NEQ(127.0.0.1) &&",
            "CONNECTION.TCPSTATE.EQ(ESTABLISHED)\" -detail full",
            "show connections from a particular sourceip and targeted",
            "to port 80",
            "show connectiontable \"CONNECTION.SRCIP.EQ(10.102.1.91) &&",
            "CONNECTION.DSTPORT.EQ(80)\"",
            "show connection particular to a service and its linked",
            "client connections",
            "show connectiontable \"CONNECTION.SVCNAME.EQ(\"S1\")\"",
            "-detail link",
            "show connections for a particular servicetype(e.g.http)",
            "show connectiontable \"CONNECTION.SERVICE_TYPE.EQ(TCP)\"",
            "viewing connections that have been idle for a long time",
            "show connectiontable \"CONNECTION.IDLETIME.GT(100)\"",
            "show connections for a particular interface and vlan",
            "show connectiontable \"CONNECTION.INTF.EQ(\"1/1\") &&",
            "CONNECTION.VLANID.EQ(1)\"",
            "."
        ],
        "is_get_id": false,
        "is_delete_id": false,
        "is_updateable": false
    },
    {
        "option_name": "link",
        "type": "bool",
        "description": [
            "Display link information if available."
        ],
        "is_get_id": false,
        "is_delete_id": false,
        "is_updateable": false
    },
    {
        "option_name": "filtername",
        "type": "bool",
        "description": [
            "Display name instead of IP for local entities."
        ],
        "is_get_id": false,
        "is_delete_id": false,
        "is_updateable": false
    },
    {
        "option_name": "detail",
        "type": "list",
        "choices": [
            "LINK",
            "NAME",
            "CONNFAILOVER",
            "FULL",
            "NNM",
            "FULL+"
        ],
        "description": [
            "Specify display options for the connection table.",
            "* LINK - Displays the linked PCB (Protocol Control Block).",
            "* NAME - Displays along with the service name.",
            "* CONNFAILOVER - Displays PCB with connection failover.",
            "* FULL - Displays all available details.",
            "Possible values = LINK, NAME, CONNFAILOVER, FULL, NNM, FULL+"
        ],
        "is_get_id": false,
        "is_delete_id": false,
        "is_updateable": false
    },
    {
        "option_name": "listen",
        "type": "bool",
        "description": [
            "Display listening services only."
        ],
        "is_get_id": false,
        "is_delete_id": false,
        "is_updateable": false
    },
    {
        "option_name": "nodeid",
        "type": "float",
        "description": [
            "Unique number that identifies the cluster node.",
            "Minimum value =  0",
            "Maximum value =  31"
        ],
        "is_get_id": false,
        "is_delete_id": false,
        "is_updateable": false
    }
]