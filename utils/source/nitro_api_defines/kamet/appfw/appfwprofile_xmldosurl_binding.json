[
    {
        "is_delete_id": true,
        "is_get_id": false,
        "type": "str",
        "option_name": "xmldosurl",
        "description": [
            "XML DoS URL regular expression length."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max element depth check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxelementdepthcheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxelementdepth",
        "description": [
            "Maximum nesting (depth) of XML elements. This check protects against documents that have excessive hierarchy depths."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max element name length check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxelementnamelengthcheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxelementnamelength",
        "description": [
            "Specify the longest name of any element (including the expanded namespace) to protect against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max elements check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxelementscheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxelements",
        "description": [
            "Specify the maximum number of XML elements allowed. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max element children check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxelementchildrencheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxelementchildren",
        "description": [
            "Specify the maximum number of children allowed per XML element. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max nodes check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxnodescheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxnodes",
        "description": [
            "Specify the maximum number of XML nodes. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max Entity Expansions Check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxentityexpansionscheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxentityexpansions",
        "description": [
            "Specify maximum allowed number of entity expansions. Protects aganist Entity Expansion Attack."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max Entity Expansions Depth Check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxentityexpansiondepthcheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxentityexpansiondepth",
        "description": [
            "Specify maximum entity expansion depth. Protects aganist Entity Expansion Attack."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max attributes check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxattributescheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxattributes",
        "description": [
            "Specify maximum number of attributes per XML element. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max attribute name length check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxattributenamelengthcheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxattributenamelength",
        "description": [
            "Specify the longest name of any XML attribute. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max atribute value length is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxattributevaluelengthcheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxattributevaluelength",
        "description": [
            "Specify the longest value of any XML attribute. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max namespaces check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxnamespacescheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxnamespaces",
        "description": [
            "Specify maximum number of active namespaces. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max namespace URI length check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxnamespaceurilengthcheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxnamespaceurilength",
        "description": [
            "Specify the longest URI of any XML namespace. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max CDATA length check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxchardatalengthcheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxchardatalength",
        "description": [
            "Specify the maximum size of CDATA. Protects against overflow attacks and large quantities of unparsed data within XML messages."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Max file size check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlmaxfilesizecheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxfilesize",
        "description": [
            "Specify the maximum size of XML messages. Protects against overflow attacks."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Min file size check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlminfilesizecheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlminfilesize",
        "description": [
            "Enforces minimum message size."
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Block PI is ON or OFF. Protects resources from denial of service attacks as SOAP messages cannot have processing instructions (PI) in messages."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlblockpi",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML DTD is ON or OFF. Protects against recursive Document Type Declaration (DTD) entity expansion attacks. Also, SOAP messages cannot have DTDs in messages. "
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlblockdtd",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML Block External Entities Check is ON or OFF. Protects against XML External Entity (XXE) attacks that force applications to parse untrusted external entities (sources) in XML documents."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlblockexternalentities",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "transform": "lambda v: 'ON' if v else 'OFF'",
        "is_delete_id": false,
        "description": [
            "State if XML SOAP Array check is ON or OFF."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "xmlsoaparraycheck",
        "choices": [
            "on",
            "off"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxsoaparraysize",
        "description": [
            "XML Max Total SOAP Array Size. Protects against SOAP Array Abuse attack."
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "float",
        "option_name": "xmlmaxsoaparrayrank",
        "description": [
            "XML Max Individual SOAP Array Rank. This is the dimension of the SOAP array."
        ]
    },
    {
        "is_delete_id": false,
        "description": [
            "Enabled."
        ],
        "is_get_id": false,
        "type": "str",
        "option_name": "state",
        "choices": [
            "ENABLED",
            "DISABLED"
        ]
    },
    {
        "is_delete_id": false,
        "is_get_id": false,
        "type": "str",
        "option_name": "comment",
        "description": [
            "Any comments about the purpose of profile, or other useful information about the profile."
        ]
    },
    {
        "is_delete_id": true,
        "is_get_id": true,
        "type": "str",
        "option_name": "name",
        "description": [
            "Name for the profile. Must begin with a letter, number, or the underscore character (_), and must contain only letters, numbers, and the hyphen (-), period (.), pound (#), space ( ), at (@), equals (=), colon (:), and underscore (_) characters. Cannot be changed after the profile is added.",
            "",
            "The following requirement applies only to the NetScaler CLI:",
            "If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, \"my profile\" or 'my profile')."
        ]
    }
]