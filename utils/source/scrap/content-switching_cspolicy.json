[
    {
        "mutable": false, 
        "readonly": false, 
        "type": "str", 
        "name": "policyname", 
        "description_lines": [
            "Name for the content switching policy. Must begin with an ASCII alphanumeric or underscore (_) character, and must contain only ASCII alphanumeric, underscore, hash (#), period (.), space, colon (:), at sign (@), equal sign (=), and hyphen (-) characters. Cannot be changed after a policy is created.", 
            "The following requirement applies only to the NetScaler CLI:", 
            "If the name includes one or more spaces, enclose the name in double or single quotation marks (for example, my policy or my policy).", 
            "Minimum length = 1"
        ]
    }, 
    {
        "mutable": true, 
        "readonly": false, 
        "type": "str", 
        "name": "url", 
        "description_lines": [
            "URL string that is matched with the URL of a request. Can contain a wildcard character. Specify the string value in the following format: [[prefix] [*]] [.suffix].", 
            "Minimum length = 1", 
            "Maximum length = 208"
        ]
    }, 
    {
        "mutable": true, 
        "readonly": false, 
        "type": "str", 
        "name": "rule", 
        "description_lines": [
            "Expression, or name of a named expression, against which traffic is evaluated. Written in the classic or default syntax.", 
            "Note:", 
            "Maximum length of a string literal in the expression is 255 characters. A longer string can be split into smaller strings of up to 255 characters each, and the smaller strings concatenated with the + operator. For example, you can create a 500-character string as follows: '\"<string of 255 characters>\" + \"<string of 245 characters>\"'", 
            "The following requirements apply only to the NetScaler CLI:", 
            "* If the expression includes one or more spaces, enclose the entire expression in double quotation marks.", 
            "* If the expression itself includes double quotation marks, escape the quotations by using the character.", 
            "* Alternatively, you can use single quotation marks to enclose the rule, in which case you do not have to escape the double quotation marks."
        ]
    }, 
    {
        "mutable": true, 
        "readonly": false, 
        "type": "str", 
        "name": "domain", 
        "description_lines": [
            "The domain name. The string value can range to 63 characters.", 
            "Minimum length = 1"
        ]
    }, 
    {
        "mutable": true, 
        "readonly": false, 
        "type": "str", 
        "name": "action", 
        "description_lines": [
            "Content switching action that names the target load balancing virtual server to which the traffic is switched."
        ]
    }, 
    {
        "mutable": true, 
        "readonly": false, 
        "type": "str", 
        "name": "logaction", 
        "description_lines": [
            "The log action associated with the content switching policy."
        ]
    }, 
    {
        "mutable": false, 
        "readonly": false, 
        "type": "str", 
        "name": "newname", 
        "description_lines": [
            "The new name of the content switching policy.", 
            "Minimum length = 1"
        ]
    }, 
    {
        "mutable": false, 
        "readonly": true, 
        "type": "float", 
        "name": "vstype", 
        "description_lines": [
            "Virtual server type."
        ]
    }, 
    {
        "mutable": false, 
        "readonly": true, 
        "type": "float", 
        "name": "hits", 
        "description_lines": [
            "Total number of hits."
        ]
    }, 
    {
        "mutable": false, 
        "readonly": true, 
        "type": "float", 
        "name": "bindhits", 
        "description_lines": [
            "Total number of hits."
        ]
    }, 
    {
        "mutable": false, 
        "readonly": true, 
        "type": "str", 
        "name": "labelname", 
        "description_lines": [
            "Name of the label invoked."
        ]
    }, 
    {
        "name": "labeltype", 
        "choices": [
            "reqvserver", 
            "resvserver", 
            "policylabel"
        ], 
        "readonly": true, 
        "mutable": false, 
        "type": "str", 
        "description_lines": [
            "The invocation type.", 
            "Possible values = reqvserver, resvserver, policylabel"
        ]
    }, 
    {
        "mutable": false, 
        "readonly": true, 
        "type": "float", 
        "name": "priority", 
        "description_lines": [
            "priority of bound policy."
        ]
    }, 
    {
        "mutable": false, 
        "readonly": true, 
        "type": "bool", 
        "name": "activepolicy", 
        "description_lines": [
            "Indicates whether policy is bound or not."
        ]
    }, 
    {
        "name": "cspolicytype", 
        "choices": [
            "Classic Policy", 
            "Advanced Policy"
        ], 
        "readonly": true, 
        "mutable": false, 
        "type": "str", 
        "description_lines": [
            "Indicates whether policy is PI or not.(used only during display).", 
            "Possible values = Classic Policy, Advanced Policy"
        ]
    }, 
    {
        "mutable": false, 
        "readonly": true, 
        "type": "float", 
        "name": "__count", 
        "description_lines": [
            "count parameter"
        ]
    }
]